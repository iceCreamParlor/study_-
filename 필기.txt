* 비트마스크
- 비트 연산자를 통해 부분집합을 표현함
& | ~ ^(다르면 1 같으면 0)

a<<b는 a*2^b와 같다
a>>b는 a/2^b
홀수인지 판별하는지는 if(N & 1)로 쓸 수 있다.

* 비트마스크
{1, 3, 5, 9} == 570
0이 포함되어 있는지 검사 570 & (1<<0) -> 0
2가 포함되어 있는지 검사 570 & (1<<2) -> 0
3이 포함되어 있는지 검사 570 & (1<<3) -> 8

1 추가하기 570 | (1<<1) -> 570 (변화 x)
2 추가하기 570 | (1<<2) -> 572

1 제거하기 570 | ~(1<<1) -> 568
2 제거하기 570 | ~(1<<2) -> 570

* 완전 탐색( Brute Force Search)
방법 - 
BruteForce(그냥 다 해보기) / BFS/ 재귀, 비트마스크/ 백트래킹

1. BruteForce(그냥 다 해보기) :: 모든 경우의 수를 다 시도해 본다. 가능한 모든 경우의 수를 파악해야 한다. 시간 복잡도를 먼저 짐작해 보아야 한다.
